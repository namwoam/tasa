From e9027970989cb0f08a83057731f99b260247700d Mon Sep 17 00:00:00 2001
From: Andreas Larsson <andreas@gaisler.com>
Date: Fri, 28 Aug 2020 09:44:36 +0200
Subject: [PATCH 23/32] sparc32,leon: Add erratafix for TN-0010

This fix relies upon a gcc version that sets the define
__FIX_LEON3FT_TN0010 based on -mfix-ut700.

Signed-off-by: Andreas Larsson <andreas@gaisler.com>
---
 arch/sparc/include/asm/asmmacro.h    | 8 ++++++++
 arch/sparc/include/asm/cmpxchg_32.h  | 8 ++++++--
 arch/sparc/include/asm/pgtable_32.h  | 3 ++-
 arch/sparc/include/asm/sbi.h         | 3 ++-
 arch/sparc/include/asm/spinlock_32.h | 7 +++++--
 arch/sparc/kernel/leon_smp.c         | 3 ++-
 arch/sparc/kernel/sun4d_smp.c        | 3 ++-
 arch/sparc/kernel/sun4m_smp.c        | 3 ++-
 8 files changed, 29 insertions(+), 9 deletions(-)

diff --git a/arch/sparc/include/asm/asmmacro.h b/arch/sparc/include/asm/asmmacro.h
index 687269d581d1..d1f894990f6a 100644
--- a/arch/sparc/include/asm/asmmacro.h
+++ b/arch/sparc/include/asm/asmmacro.h
@@ -55,4 +55,12 @@
 #define B2B_INLINE_DOUBLE_NOP ""
 #endif
 
+#ifdef __FIX_LEON3FT_TN0010
+#define TN0010_NOP nop;
+#define TN0010_INLINE_NOP "nop\n\t"
+#else
+#define TN0010_NOP
+#define TN0010_INLINE_NOP ""
+#endif
+
 #endif /* !(_SPARC_ASMMACRO_H) */
diff --git a/arch/sparc/include/asm/cmpxchg_32.h b/arch/sparc/include/asm/cmpxchg_32.h
index 906380661c29..03955ea70a26 100644
--- a/arch/sparc/include/asm/cmpxchg_32.h
+++ b/arch/sparc/include/asm/cmpxchg_32.h
@@ -14,9 +14,12 @@
 
 #ifdef CONFIG_SPARC_LEON_CAS
 
+#include <asm/asmmacro.h>
+
 static inline unsigned long xchg_u32(__volatile__ unsigned long *m, unsigned long val)
 {
-	__asm__ __volatile__("swap [%2], %0"
+	__asm__ __volatile__(TN0010_INLINE_NOP
+			     "swap [%2], %0"
 			     : "=&r" (val)
 			     : "0" (val), "r" (m)
 			     : "memory");
@@ -64,7 +67,8 @@ void __cmpxchg_called_with_bad_pointer(void);
 static inline unsigned long
 __cmpxchg_u32(volatile int *m, int old, int new)
 {
-	__asm__ __volatile__("casa [%2] 0xb, %3, %0"
+	__asm__ __volatile__(TN0010_INLINE_NOP
+			     "casa [%2] 0xb, %3, %0"
 			     : "=&r" (new)
 			     : "0" (new), "r" (m), "r" (old)
 			     : "memory");
diff --git a/arch/sparc/include/asm/pgtable_32.h b/arch/sparc/include/asm/pgtable_32.h
index 632cdb959542..bfc87c0404b7 100644
--- a/arch/sparc/include/asm/pgtable_32.h
+++ b/arch/sparc/include/asm/pgtable_32.h
@@ -106,7 +106,8 @@ extern unsigned long empty_zero_page[PAGE_SIZE / sizeof(unsigned long)];
  */
 static inline unsigned long srmmu_swap(unsigned long *addr, unsigned long value)
 {
-	__asm__ __volatile__("swap [%2], %0" :
+	__asm__ __volatile__(TN0010_INLINE_NOP
+			     "swap [%2], %0" :
 			"=&r" (value) : "0" (value), "r" (addr) : "memory");
 	return value;
 }
diff --git a/arch/sparc/include/asm/sbi.h b/arch/sparc/include/asm/sbi.h
index 49b4e0aa4689..12412ece961d 100644
--- a/arch/sparc/include/asm/sbi.h
+++ b/arch/sparc/include/asm/sbi.h
@@ -70,7 +70,8 @@ struct sbi_regs {
 
 static inline int acquire_sbi(int devid, int mask)
 {
-	__asm__ __volatile__ ("swapa [%2] %3, %0" :
+	__asm__ __volatile__ (TN0010_INLINE_NOP
+			      "swapa [%2] %3, %0" :
 			      "=r" (mask) :
 			      "0" (mask),
 			      "r" (ECSR_DEV_BASE(devid) | SBI_INTR_STATE),
diff --git a/arch/sparc/include/asm/spinlock_32.h b/arch/sparc/include/asm/spinlock_32.h
index adade4095cf2..44d3e2679138 100644
--- a/arch/sparc/include/asm/spinlock_32.h
+++ b/arch/sparc/include/asm/spinlock_32.h
@@ -19,6 +19,7 @@
 static inline void arch_spin_lock(arch_spinlock_t *lock)
 {
 	__asm__ __volatile__(
+	TN0010_INLINE_NOP
 	"\n1:\n\t"
 	"ldstub	[%0], %%g2\n\t"
 	"orcc	%%g2, 0x0, %%g0\n\t"
@@ -39,7 +40,8 @@ static inline void arch_spin_lock(arch_spinlock_t *lock)
 static inline int arch_spin_trylock(arch_spinlock_t *lock)
 {
 	unsigned int result;
-	__asm__ __volatile__("ldstub [%1], %0"
+	__asm__ __volatile__(TN0010_INLINE_NOP
+			     "ldstub [%1], %0"
 			     : "=r" (result)
 			     : "r" (lock)
 			     : "memory");
@@ -149,7 +151,8 @@ static inline int arch_write_trylock(arch_rwlock_t *rw)
 {
 	unsigned int val;
 
-	__asm__ __volatile__("ldstub [%1 + 3], %0"
+	__asm__ __volatile__(TN0010_INLINE_NOP
+			     "ldstub [%1 + 3], %0"
 			     : "=r" (val)
 			     : "r" (&rw->lock)
 			     : "memory");
diff --git a/arch/sparc/kernel/leon_smp.c b/arch/sparc/kernel/leon_smp.c
index f726d950e347..1d337aaa25ac 100644
--- a/arch/sparc/kernel/leon_smp.c
+++ b/arch/sparc/kernel/leon_smp.c
@@ -63,7 +63,8 @@ int leon_ipi_irq = LEON3_IRQ_IPI_DEFAULT;
 static inline unsigned long do_swap(volatile unsigned long *ptr,
 				    unsigned long val)
 {
-	__asm__ __volatile__("swapa [%2] %3, %0\n\t" : "=&r"(val)
+	__asm__ __volatile__(TN0010_INLINE_NOP
+			     "swapa [%2] %3, %0\n\t" : "=&r"(val)
 			     : "0"(val), "r"(ptr), "i"(ASI_LEON_DCACHE_MISS)
 			     : "memory");
 	return val;
diff --git a/arch/sparc/kernel/sun4d_smp.c b/arch/sparc/kernel/sun4d_smp.c
index b06eaf4d1256..b7f343368ab3 100644
--- a/arch/sparc/kernel/sun4d_smp.c
+++ b/arch/sparc/kernel/sun4d_smp.c
@@ -33,7 +33,8 @@ static int smp_highest_cpu;
 
 static inline unsigned long sun4d_swap(volatile unsigned long *ptr, unsigned long val)
 {
-	__asm__ __volatile__("swap [%1], %0\n\t" :
+	__asm__ __volatile__(TN0010_INLINE_NOP
+			     "swap [%1], %0\n\t" :
 			     "=&r" (val), "=&r" (ptr) :
 			     "0" (val), "1" (ptr));
 	return val;
diff --git a/arch/sparc/kernel/sun4m_smp.c b/arch/sparc/kernel/sun4m_smp.c
index 228a6527082d..73076d436cde 100644
--- a/arch/sparc/kernel/sun4m_smp.c
+++ b/arch/sparc/kernel/sun4m_smp.c
@@ -29,7 +29,8 @@
 static inline unsigned long
 swap_ulong(volatile unsigned long *ptr, unsigned long val)
 {
-	__asm__ __volatile__("swap [%1], %0\n\t" :
+	__asm__ __volatile__(TN0010_INLINE_NOP
+			     "swap [%1], %0\n\t" :
 			     "=&r" (val), "=&r" (ptr) :
 			     "0" (val), "1" (ptr));
 	return val;
-- 
2.34.1

